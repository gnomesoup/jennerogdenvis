p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill='lightblue') +
geom_path(colour="white", size=1) +
scale_fill_manual(values=pal) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill='lightblue') +
geom_path(colour='white', size=1)
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat, labels=SchoolName), inherit.aes=F, size=4, colour=pal[3])
pSchools
pSchools + geom_text()
pSchools + geom_text(data=schoolLoc, aes(long, lat, labels=paste0(" ", SchoolName)), eval=T, hjust=0)
pSchools + geom_text(data=schoolLoc, aes(long, lat, labels=paste0(" ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools + geom_text(data=schoolLoc, aes(long, lat, label=paste0(" ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools + geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pal
pal
pal[2,5]
pal[2]
pal
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
scale_fill_manual(values=c(pal[2], pal[5])) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer) +
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
pal
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
scale_fill_manual(values=c(pal[2], pal[5])) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer) +
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
scale_fill_manual(values=c(pal[2], pal[5])) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer)
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
View(crime)
unique(crime$PRIMARY.DESCRIPTION)
?CRS
summary(bound)
head(filter(crime, PRIMARY.DESCRPTION=="SEX OFFENCE"))
head(filter(crime, PRIMARY.DESCRIPTION=="SEX OFFENCE"))
View(head(filter(crime, PRIMARY.DESCRIPTION=="SEX OFFENCE")))
View(head(filter(crime, PRIMARY.DESCRIPTION=="SEX OFFENSE")))
unique(crime$SECONDARY.DESCRIPTION)
unique(crime$SECONDARY.DESCRIPTION) %>% grep("RAPE")
unique(crime$SECONDARY.DESCRIPTION) %>% grep("RAPE", .)
grep("RAPE", crime$SECONDARY.DESCRIPTION)
grep("*RAPE*", crime$SECONDARY.DESCRIPTION)
p + geom_point(data=crime, aes(group=1), inherit.aes=F) + stat_density2d(data=crime, aes(group=1)
)
names(crime)
names(crime)[13:14]
names(crime)[13:14] <- c("long", "lat")
p + geom_point(data=crime, aes(group=1), inherit.aes=F) + stat_density2d(data=crime, aes(group=1)
)
p + geom_point(data=crime, aes(group=1), inherit.aes=F) + stat_density2d(data=crime, aes(group=1))
crime
names(crime)
p + geom_point(data=crime, aes(group=1))
p + geom_point(data=crime, aes(group=1), shape='x')
p + geom_point(data=crime, aes(group=1)) + stat_density2d(data=crime, aes(group=1))
p + geom_point(data=crime, aes(group=1), size = 1, alpha = '.8', colour = pal[3]) + stat_density2d(data=crime, aes(group=1))
library(readr); library(lubridate); library(curl); library(dplyr)
dir.create("crime", showWarnings=F)
curl_download("https://data.cityofchicago.org/resource/x2n5-8w5q.csv", "./crime/chicrimes1year.csv") #download latest crime
crime <- read.csv("./crime/chicrimes1year.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
library(readr); library(lubridate); library(curl); library(dplyr)
dir.create("crime", showWarnings=F)
curl_download("https://data.cityofchicago.org/resource/x2n5-8w5q.csv", "./crime/chicrimes1year.csv") #download latest crime
crime <- read_csv("./crime/chicrimes1year.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
library(readr); library(lubridate); library(curl); library(dplyr)
dir.create("crime", showWarnings=F)
curl_download("https://data.cityofchicago.org/resource/x2n5-8w5q.csv?select=*", "./crime/chicrimes1year.csv") #download latest crime
crime <- read_csv("./crime/chicrimes1year.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
library(readr); library(lubridate); library(curl); library(dplyr)
dir.create("crime", showWarnings=F)
curl_download("https://data.cityofchicago.org/resource/x2n5-8w5q?select=*", "./crime/chicrimes1year.csv") #download latest crime
crime <- read_csv("./crime/chicrimes1year.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
install.packages("RSocrata")
library(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)
dir.create("crime", showWarnings=F)
crime <- read.socrata("https://data.cityofchicago.org/resource/x2n5-8w5q") #download latest crime
# crime <- read_csv("./crime/chicrimes1year.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
library(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)
dir.create("crime", showWarnings=F)
crime <- read.socrata("https://data.cityofchicago.org/resource/x2n5-8w5q.json") #download latest crime
crime <- read_csv("./crime/Crimes_-_One_year_prior_to_present.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
names(crime)[13:14] <- c("long", "lat")
p + geom_point(data=crime, aes(group=1), size = 1, alpha = '.8', colour = pal[3]) + stat_density2d(data=crime, aes(group=1))
p + geom_point(data=crime, aes(group=1), size = 1, alpha = '.8', colour = 'red') +
stat_density2d(data=crime, aes(group=1), color = 'red')
p + geom_point(data=crime, aes(group=1), size = 3, alpha = '.5', colour = 'red') +
stat_density2d(data=crime, aes(group=1), color = 'red')
p + geom_point(data=crime, aes(group=1), size = 3, alpha = .5, colour = 'red') +
stat_density2d(data=crime, aes(group=1), color = 'red')
pts <- coordinates(crime) <- ~long + lat
pts <- crime(,c("long", "lat"))
pts <- crime[,c("long", "lat")]
head(pts)
coordinates(pts) <- ~long+lat
pts=data.frame(
x=runif(100,5,12),
y=runif(100,10,15),
z=sample(letters,100,TRUE))
pts
coordinates(pts) <- ~x+y
?coordinates
pts <- crime[,c("long", "lat")]
names(pts) <- c("x", "y")
coordinates(pts) <- ~x+y
pts <- as.data.frame(crime)
head(pts)
coordinates(pts) <- ~long+lat
pts <- filter(pts, !is.na(pts$long))
coordinates(pts) <- ~long+lat
over(jenog, pts)
jenog
names(jenog)
summary(jenog)
str(jenog)
proj4string(pts) <- proj4string(jenog)
?over
test <- pts %over% jenog
head(test)
test <- over(pts, jenog)
head(test)
test <- over(jenog, pts)
test
View(test)
test <- over(pts, jenog)
vignette("over")
?convProj
library(rgdal);library(ggplot2); library(dplyr)
bound <- readOGR("./Boundaries", "CPS_Elementary_School_Attendance_Boundaries_SY1415")
# bound <- spTransform(bound, CRS("+proj=longlat +datum=WGS84"))
schools <- data.frame(SchoolName = bound$SchoolName, SchoolID = bound$SchoolID, SchoolAddr = bound$SchoolAddr)
boundplot <- fortify(bound)
jenog <- subset(bound, bound$SchoolName == "OGDEN" | bound$SchoolName == "JENNER")
jenogplot <- fortify(jenog)
# xlim <- as.numeric(bbox(jenog)[1,])
# ylim <- as.numeric(bbox(jenog)[2,])
lims <- bbox(jenog) %>% as.data.frame %>% mutate(mean = rowMeans(.), span = (max-min)/2)
schoolLoc <- data.frame(SchoolName = c("Jenner", "Ogden East", "Ogden West"),
long = c(-87.640825, -87.629096, -87.660443),
lat = c(41.902122, 41.900282, 41.891817))
df <- SpatialPoints(schoolLoc[,c("long","lat")], proj4string=CRS("+proj=longlat +datum=WGS84"))
df <- spTransform(df, bound@proj4string)
df <- coordinates(df)
schoolLoc$long <- df[,1]
schoolLoc$lat <- df[,2]
wways <- readOGR("./Waterways", "Hydro")
wwaysplot <- fortify(wways)
View(lims)
View(lims)
e
xlim <- c(lims$mean[1] - span, lims$mean[1] + span)
span <- max(lims$span)
xlim <- c(lims$mean[1] - span, lims$mean[1] + span)
ylim <- c(lims$mean[2] - span, lims$mean[2] + span)
View(jenogplot)
pal
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
pal
pal <- wes_palette("Moonrise3")
library(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)
dir.create("crime", showWarnings=F)
# crime <- read.socrata("https://data.cityofchicago.org/resource/x2n5-8w5q.json") #download latest crime
crime <- read_csv("./crime/Crimes_-_One_year_prior_to_present.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
names(crime)[13:14] <- c("long", "lat")
p + geom_point(data=crime, aes(group=1), size = 2, alpha = .5, colour = 'red') +
stat_density2d(data=crime, aes(group=1), color = 'red')
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
scale_fill_manual(values=c(pal[2], pal[5])) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer)
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
library(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)
dir.create("crime", showWarnings=F)
# crime <- read.socrata("https://data.cityofchicago.org/resource/x2n5-8w5q.json") #download latest crime
crime <- read_csv("./crime/Crimes_-_One_year_prior_to_present.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
names(crime)[13:14] <- c("long", "lat")
p + geom_point(data=crime, aes(group=1), size = 2, alpha = .5, colour = 'red') +
stat_density2d(data=crime, aes(group=1), color = 'red')
library(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)
dir.create("crime", showWarnings=F)
# crime <- read.socrata("https://data.cityofchicago.org/resource/x2n5-8w5q.json") #download latest crime
crime <- read_csv("./crime/Crimes_-_One_year_prior_to_present.csv") #load it to an object
crime <- crime %>% filter(!is.na("LATITUDE")) #make sure we have all locations
names(crime)[13:14] <- c("long", "lat")
p + geom_point(data=crime, aes(group=1), size = 2, alpha = .03, colour = 'red') #+
# stat_density2d(data=crime, aes(group=1), color = 'red')
crime <- crime %>% filter(!is.na(long)) #make sure we have all locations
library(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)
dir.create("crime", showWarnings=F)
# crime <- read.socrata("https://data.cityofchicago.org/resource/x2n5-8w5q.json") #download latest crime
crime <- read_csv("./crime/Crimes_-_One_year_prior_to_present.csv") #load it to an object
names(crime)[13:14] <- c("long", "lat")
crime <- crime %>% filter(!is.na(long)) #make sure we have all locations
p + geom_point(data=crime, aes(group=1), size = 5, alpha = .03, colour = 'red') #+
# stat_density2d(data=crime, aes(group=1), color = 'red')
p + geom_point(data=crime, aes(group=1), size = 4, alpha = .03, colour = 'red') #+
# stat_density2d(data=crime, aes(group=1), color = 'red')
pSchools + geom_point(data=crime, aes(group=1), size = 4, alpha = .03, colour = 'red') #+
# stat_density2d(data=crime, aes(group=1), color = 'red')
pSchools + stat_density2d(data=crime, aes(group=1, color = ..density.., size=ifelse(<=1,0,..density..), alpha=..density..), geom="tile", countour=F)
pSchools + stat_density2d(data=crime, aes(group=1, color = ..density.., size=ifelse(..density..<=1,0,..density..), alpha=..density..), geom="tile", countour=F)
pSchools + stat_density2d(data=crime, aes(group=1), geom="tile", countour=F)
pSchools + stat_density2d(data=crime, aes(group=1, fill= ..density..), geom="tile", countour=F)
pSchools + stat_density2d(data=crime, aes(x = long, y = lat, fill= ..density..), inherit.aes=F, geom="tile", countour=F)
pSchools + stat_density2d(data=crime, , geom="tile", aes(x = long, y = lat, fill= ..density..), inherit.aes=F, countour=F)
pSchools + stat_density2d(data=crime, geom="tile", aes(x = long, y = lat, fill= ..density...), inherit.aes=F, countour=F)
pSchools + stat_density2d(data=crime, geom="tile", aes(x = long, y = lat, fill= ..density..), inherit.aes=F, countour=F)
pSchools + stat_density2d(data=crime, geom="tile", aes(x = long, y = lat, fill= ..level..), inherit.aes=F, countour=F)
pSchools + stat_density2d(data=crime, geom="tile", aes(x = long, y = lat, fill= ..level..), inherit.aes=F, countour=F) +
scale_fill_gradent(low = "orange", high="red")
pSchools + stat_densitiy2d(data=crime, geom="tile", aes(x = long, y = lat, fill= ..level..), inherit.aes=F, countour=F) +
scale_fill_gradient(low = "orange", high="red")
pSchools + stat_density2d(data=crime, geom="tile", aes(x = long, y = lat, fill= ..level..), inherit.aes=F, countour=F) +
scale_fill_gradient(low = "orange", high="red")
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id, colour=c(pal[2], pal[5]))) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer)
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=c(pal[2], pal[5]))) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer)
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer)
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
pSchools + stat_density2d(data=crime, geom="tile", aes(x = long, y = lat, fill= ..level..), inherit.aes=F, countour=F) +
scale_fill_gradient(low = "orange", high="red")
pSchools + geom_point(data=crime, aes(group=1), size = 4, alpha = .03, colour = 'red') #+
over(jenog, crime)
library(rgdal);library(ggplot2); library(dplyr)
bound <- readOGR("./Boundaries", "CPS_Elementary_School_Attendance_Boundaries_SY1415")
# bound <- spTransform(bound, CRS("+proj=longlat +datum=WGS84"))
schools <- data.frame(SchoolName = bound$SchoolName, SchoolID = bound$SchoolID, SchoolAddr = bound$SchoolAddr)
boundplot <- fortify(bound)
jenog <- subset(bound, bound$SchoolName == "OGDEN" | bound$SchoolName == "JENNER")
jenogplot <- fortify(jenog)
lims <- bbox(jenog) %>% as.data.frame %>% mutate(mean = rowMeans(.), span = (max-min)/2)
span <- max(lims$span)
xlim <- c(lims$mean[1] - span, lims$mean[1] + span)
ylim <- c(lims$mean[2] - span, lims$mean[2] + span)
schoolLoc <- data.frame(SchoolName = c("Jenner", "Ogden East", "Ogden West"),
long = c(-87.640825, -87.629096, -87.660443),
lat = c(41.902122, 41.900282, 41.891817))
df <- SpatialPoints(schoolLoc[,c("long","lat")], proj4string=CRS("+proj=longlat +datum=WGS84"))
df <- spTransform(df, bound@proj4string)
df <- coordinates(df)
schoolLoc$long <- df[,1]
schoolLoc$lat <- df[,2]
wways <- readOGR("./Waterways", "Hydro")
wwaysplot <- fortify(wways)
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer)
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
x <- SpatialPoints(crime)
names(crime)
x <- SpatialPoints(crime[, c("long", "lat")])
x <- crime
coordinates(x)
?coordinates
coordinates(x) <- ~long + lat
crime.xy <- crime(,c("long", "lat"))
crime.xy <- crime[,c('long', 'lat')]
coordinates(crime.xy) <- ~long + lat
str[data("meuse")]
str(data("meuse"))
str(data(meuse))
data(meuse)
str(meuse)
crime.xy
crime.xy <- as.data.frame(crime.xy)
coordinates(xy) <- ~long + lat
coordinates(crime.xy) <- ~long + lat
crime.xy %over% bound
proj4string(crime.xy) <- proj4string(bound)
crime.xy %over% bound
df <- crime.xy %over% bound
View(df)
test <- filter(df, SchoolName == "OGDEN")
test
View(crime)
View(schools)
View(test)
test <- filter(rbind(crime.xy, df), SchoolName == "OGDEN")
View(crime)
test <- filter(rbind(crime[, c("long", "lat", )], df), SchoolName == "OGDEN")
test <- filter(rbind(crime[, c("long", "lat", "BLOCK", "PRIMARY DESCRIPTION")], df), SchoolName == "OGDEN")
names(crime)
test <- filter(rbind(crime[, c("long", "lat", "BLOCK", " PRIMARY DESCRIPTION")], df), SchoolName == "OGDEN")
x
x <- crime %>% select(BLOCK, PRIMARY DESCRIPTION, long, lat)
names(crime)[5:6]
names(crime)[5:6] <- c("primary", "secondary")
x <- crime %>% select(BLOCK, primary, secondary, long, lat)
head(x)
x
test <- filter(rbind(crime[, c("long", "lat", "BLOCK", "primary")], df), SchoolName == "OGDEN")
test <- filter(cbind(crime[, c("long", "lat", "BLOCK", "primary")], df), SchoolName == "OGDEN")
head(test)
pSchools + geom_point(data=test, aes(group=1), size = 4, alpha = .03, colour = 'red')
crimeTypes <- unique(crime$primary)
library(rgdal);library(ggplot2); library(dplyr)
bound <- readOGR("./Boundaries", "CPS_Elementary_School_Attendance_Boundaries_SY1415")
# bound <- spTransform(bound, CRS("+proj=longlat +datum=WGS84"))
schools <- data.frame(SchoolName = bound$SchoolName, SchoolID = bound$SchoolID, SchoolAddr = bound$SchoolAddr)
boundplot <- fortify(bound)
jenog <- subset(bound, bound$SchoolName == "OGDEN" | bound$SchoolName == "JENNER")
jenogplot <- fortify(jenog)
lims <- bbox(jenog) %>% as.data.frame %>% mutate(mean = rowMeans(.), span = (max-min)/2)
span <- max(lims$span)
xlim <- c(lims$mean[1] - span, lims$mean[1] + span)
ylim <- c(lims$mean[2] - span, lims$mean[2] + span)
schoolLoc <- data.frame(SchoolName = c("Jenner", "Ogden East", "Ogden West"),
long = c(-87.640825, -87.629096, -87.660443),
lat = c(41.902122, 41.900282, 41.891817))
df <- SpatialPoints(schoolLoc[,c("long","lat")], proj4string=CRS("+proj=longlat +datum=WGS84"))
df <- spTransform(df, bound@proj4string)
df <- coordinates(df)
schoolLoc$long <- df[,1]
schoolLoc$lat <- df[,2]
wways <- readOGR("./Waterways", "Hydro")
wwaysplot <- fortify(wways)
library(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)
dir.create("crime", showWarnings=F)
# crime <- read.socrata("https://data.cityofchicago.org/resource/x2n5-8w5q.json") #download latest crime
crime <- read_csv("./crime/Crimes_-_One_year_prior_to_present.csv") #load it to an object
names(crime)[13:14] <- c("long", "lat")
crime <- crime %>% filter(!is.na(long)) #make sure we have all locations
names(crime)[5:6] <- c("primary", "secondary")
crime.xy <- crime %>% select(long, lat) %>% as.data.frame()
coordinates(crimes.xy) <- ~long + lat
proj4string(crimes.xy) <- proj4string(bound)
crimes.xy <- crimes.xy %over% bound
View(crime.xy)
library(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)
dir.create("crime", showWarnings=F)
# crime <- read.socrata("https://data.cityofchicago.org/resource/x2n5-8w5q.json") #download latest crime
crime <- read_csv("./crime/Crimes_-_One_year_prior_to_present.csv") #load it to an object
names(crime)[13:14] <- c("long", "lat")
crime <- crime %>% filter(!is.na(long)) #make sure we have all locations
names(crime)[5:6] <- c("primary", "secondary")
crime.xy <- crime %>% select(long, lat) %>% as.data.frame()
coordinates(crime.xy) <- ~long + lat
proj4string(crime.xy) <- proj4string(bound)
crime.xy <- crime.xy %over% bound
View(crime.xy)
View(crime.xy)
crime <- cbind(crime, select(crime.xy, OBJECTID, SchoolName))
View(crime)
crimeTypes <- unique(crime$primary)
library(grid)
library(grid)
crimeplot <- function(fplot, data, ctype, cschool) {
thisData <- data %>% filter(SchoolName == cschool, primary == ctype)
fplot + geom_point(data=thisData, aes(group=1), size = 4, alpha = .03, colour = 'red') +
annotation_custom(grobTree(textGrob(ctype, x=0.1, y = 0.99, hjust=0, gp=(col='black', fontsize=15))))
}
crimeplot <- function(fplot, data, ctype, cschool) {
thisData <- data %>% filter(SchoolName == cschool, primary == ctype)
fplot + geom_point(data=thisData, aes(group=1), size = 4, alpha = .03, colour = 'red') +
annotation_custom(grobTree(textGrob(ctype, x=0.1, y = 0.99, hjust=0, gp=(col='black', fontsize=15))))
}
crimeplot <- function(fplot, data, ctype, cschool) {
thisData <- data %>% filter(SchoolName == cschool, primary == ctype)
myGrob <- grobTree(textGrob(ctype, x=0.1, y = 0.99, hjust=0, gp=gpar(col='black', fontsize=15)))
fplot + geom_point(data=thisData, aes(group=1), size = 4, alpha = .03, colour = 'red') +
annotation_custom(myGrob)
}
pSchools
library(ggplot2); library(wesanderson); library(ggmap)
pal <- wes_palette("Moonrise3")
buffer <- c(-800, 800)
p <- ggplot(boundplot) +
aes(long, lat, group=group) +
geom_polygon(fill=pal[4]) +
coord_fixed() +
theme_nothing() + theme(aspect.ratio=1) +
geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +
geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +
geom_path(colour="white", size=1) +
coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer)
pSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +
geom_text(data=schoolLoc, aes(long, lat, label=paste0("  ", SchoolName)), eval=T, hjust=0, inherit.aes=F)
pSchools
crimeplot(pSchools, crime, "NARCOTICS", "OGDEN")
crimeplot(pSchools, crime, crimeTypes, "OGDEN")
crimeplot(pSchools, crime, "THEFT", "OGDEN")
crimeplot <- function(fplot, data, ctype, cschool) {
thisData <- data %>% filter(cschool %in% SchoolName, primary == ctype)
myGrob <- grobTree(textGrob(ctype, x=0.1, y = 0.99, hjust=0, gp=gpar(col='black', fontsize=15)))
fplot + geom_point(data=thisData, aes(group=1), size = 4, alpha = .03, colour = 'red') +
annotation_custom(myGrob)
}
crimeplot(pSchools, crime, "THEFT", c("OGDEN", "JENNER"))
crimeplot <- function(fplot, data, ctype, cschool) {
thisData <- data %>% filter(SchoolName %in% cschool, primary == ctype)
myGrob <- grobTree(textGrob(ctype, x=0.1, y = 0.99, hjust=0, gp=gpar(col='black', fontsize=15)))
fplot + geom_point(data=thisData, aes(group=1), size = 4, alpha = .03, colour = 'red') +
annotation_custom(myGrob)
}
crimeplot(pSchools, crime, "THEFT", c("OGDEN", "JENNER"))
crimeTypes
crimeplot(pSchools, crime, "HOMICIDE", c("OGDEN", "JENNER"))
crimeplot(pSchools, crime, "BATTERY", c("OGDEN", "JENNER"))
