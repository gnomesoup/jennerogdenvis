{
    "contents" : "---\ntitle: \"Jenner-Ogden Data Visualization\"\noutput: html_document\n---\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n```{r boundaries, echo=F}\nlibrary(rgdal);library(ggplot2); library(dplyr)\nbound <- readOGR(\"./Boundaries\", \"CPS_Elementary_School_Attendance_Boundaries_SY1415\")\n# bound <- spTransform(bound, CRS(\"+proj=longlat +datum=WGS84\"))\nschools <- data.frame(SchoolName = bound$SchoolName, SchoolID = bound$SchoolID, SchoolAddr = bound$SchoolAddr)\nboundplot <- fortify(bound)\njenog <- subset(bound, bound$SchoolName == \"OGDEN\" | bound$SchoolName == \"JENNER\")\njenogplot <- fortify(jenog)\n\nlims <- bbox(jenog) %>% as.data.frame %>% mutate(mean = rowMeans(.), span = (max-min)/2)\nspan <- max(lims$span)\nxlim <- c(lims$mean[1] - span, lims$mean[1] + span)\nylim <- c(lims$mean[2] - span, lims$mean[2] + span)\n\nschoolLoc <- data.frame(SchoolName = c(\"Jenner\", \"Ogden East\", \"Ogden West\"),\n                        long = c(-87.640825, -87.629096, -87.660443),\n                        lat = c(41.902122, 41.900282, 41.891817))\ndf <- SpatialPoints(schoolLoc[,c(\"long\",\"lat\")], proj4string=CRS(\"+proj=longlat +datum=WGS84\"))\ndf <- spTransform(df, bound@proj4string)\ndf <- coordinates(df)\nschoolLoc$long <- df[,1]\nschoolLoc$lat <- df[,2]\n\nwways <- readOGR(\"./Waterways\", \"Hydro\")\nwwaysplot <- fortify(wways)\n```\n\n```{r, echo=FALSE}\nlibrary(ggmap); library(wesanderson)\n# map <- get_map(location=c(lon = -87.638, lat = 41.895), zoom = 14, maptype=\"roadmap\")\n# chi <- ggmap(map)\n# eMap <- chi + geom_polygon(aes(x=as.nulong, y=lat, group=group), fill=grey, size = 2, color='black', data=bound, alpha=0)\n# eMap\n```\n\n```{r}\nlibrary(ggplot2); library(wesanderson); library(ggmap)\npal <- wes_palette(\"Moonrise3\")\nbuffer <- c(-800, 800)\np <- ggplot(boundplot) + \n  aes(long, lat, group=group) + \n  geom_polygon(fill=pal[4]) + \n  coord_fixed() + \n  theme_nothing() + theme(aspect.ratio=1) +\n  geom_polygon(data=jenogplot, aes(long, lat, group=group, fill=id)) +\n  geom_polygon(data=wwaysplot, aes(long, lat, group=group), fill=pal[1]) +\n  geom_path(colour=\"white\", size=1) + \n  coord_cartesian(xlim=xlim + buffer, ylim=ylim + buffer)\npSchools <- p + geom_point(data=schoolLoc, aes(long, lat), inherit.aes=F, size=4, colour=pal[3]) +\n  geom_text(data=schoolLoc, aes(long, lat, label=paste0(\"  \", SchoolName)), eval=T, hjust=0, inherit.aes=F)\npSchools\n```\n\n```{r crime, echo=FALSE}\nlibrary(readr); library(lubridate); library(curl); library(dplyr); library(RSocrata)\ndir.create(\"crime\", showWarnings=F)\n# crime <- read.socrata(\"https://data.cityofchicago.org/resource/x2n5-8w5q.json\") #download latest crime \ncrime <- read_csv(\"./crime/Crimes_-_One_year_prior_to_present.csv\") #load it to an object\nnames(crime)[13:14] <- c(\"long\", \"lat\")\ncrime <- crime %>% filter(!is.na(long)) #make sure we have all locations\nnames(crime)[5:6] <- c(\"primary\", \"secondary\")\ncrime.xy <- crime %>% select(long, lat) %>% as.data.frame()\ncoordinates(crime.xy) <- ~long + lat\nproj4string(crime.xy) <- proj4string(bound)\ncrime.xy <- crime.xy %over% bound\ncrime <- cbind(crime, select(crime.xy, OBJECTID, SchoolName))\ncrimeTypes <- unique(crime$primary)\n```\n\n```{r}\nlibrary(grid)\ncrimeplot <- function(fplot, data, ctype, cschool) {\n  thisData <- data %>% filter(SchoolName %in% cschool, primary == ctype)\n  myGrob <- grobTree(textGrob(ctype, x=0.1, y = 0.99, hjust=0, gp=gpar(col='black', fontsize=15)))\n  fplot + geom_point(data=thisData, aes(group=1), size = 4, alpha = .03, colour = 'red') + \n     annotation_custom(myGrob)\n}\npSchools + geom_point(data=crime, aes(group=1), size = 4, alpha = .03, colour = 'red') #+\n  # stat_density2d(data=crime, aes(group=1), color = 'red')\n```\n\n```{r}\npSchools + stat_density2d(data=crime, geom=\"tile\", aes(x = long, y = lat, fill= ..level..), inherit.aes=F, countour=F) +\n  scale_fill_gradient(low = \"orange\", high=\"red\")\n```\n\n",
    "created" : 1443461245807.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2529616778",
    "id" : "5497E4FB",
    "lastKnownWriteTime" : 1444256129,
    "path" : "~/GitHub/jennerogdenvis/JennerOgdenVis.Rmd",
    "project_path" : "JennerOgdenVis.Rmd",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "type" : "r_markdown"
}